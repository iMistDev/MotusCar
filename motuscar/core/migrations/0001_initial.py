# Generated by Django 4.2.21 on 2025-07-03 07:27

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmada', 'Confirmada'), ('cancelada', 'Cancelada'), ('realizada', 'Realizada')], default='pendiente', max_length=20)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'agenda',
            },
        ),
        migrations.CreateModel(
            name='DisponibilidadMecanico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.PositiveSmallIntegerField(choices=[(0, 'Lunes'), (1, 'Martes'), (2, 'Miércoles'), (3, 'Jueves'), (4, 'Viernes'), (5, 'Sábado'), (6, 'Domingo')])),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('disponible', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Disponibilidades de Mecánicos',
                'db_table': 'disponibilidad_mecanico',
            },
        ),
        migrations.CreateModel(
            name='Mecanico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(choices=[('arica', 'Arica y Parinacota'), ('tarapaca', 'Tarapacá'), ('antofagasta', 'Antofagasta'), ('atacama', 'Atacama'), ('coquimbo', 'Coquimbo'), ('valparaiso', 'Valparaíso'), ('metropolitana', 'Metropolitana de Santiago'), ('ohiggins', "Libertador General Bernardo O'Higgins"), ('maule', 'Maule'), ('nuble', 'Ñuble'), ('biobio', 'Biobío'), ('araucania', 'La Araucanía'), ('rios', 'Los Ríos'), ('lagos', 'Los Lagos'), ('aysen', 'Aysén del General Carlos Ibáñez del Campo'), ('magallanes', 'Magallanes y de la Antártica Chilena')], max_length=50)),
                ('comuna', models.CharField(max_length=50)),
                ('direccion', models.CharField(max_length=200)),
                ('especialidad', models.CharField(choices=[('lubricentro', 'Lubricentro'), ('electrico', 'Eléctrico'), ('vulcanizacion', 'Vulcanización'), ('mecanica', 'Mecánica'), ('pintura', 'Pintura')], max_length=50)),
                ('tipo', models.CharField(choices=[('taller', 'Taller'), ('particular', 'Particular')], max_length=20)),
            ],
            options={
                'db_table': 'mecanico',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id_producto', models.AutoField(primary_key=True, serialize=False)),
                ('Nombre_Producto', models.CharField(max_length=50)),
                ('Código_SKU', models.CharField(max_length=50, unique=True, verbose_name='Código SKU')),
                ('Proveedor', models.CharField(max_length=100)),
                ('Categoria', models.CharField(max_length=100)),
                ('Precio_Unitario', models.PositiveIntegerField(default=0)),
                ('Cantidad', models.PositiveIntegerField(default=0)),
                ('Descripcion', models.CharField(max_length=200)),
                ('Fecha_Ingreso', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('precio', models.PositiveIntegerField(help_text='Precio en pesos (sin decimales)', validators=[django.core.validators.MaxValueValidator(9999999999)])),
                ('duracion_estimada', models.DurationField()),
            ],
            options={
                'db_table': 'servicio',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('telefono', models.CharField(blank=True, max_length=20, verbose_name='teléfono')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='fecha de nacimiento')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='avatar')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
                'db_table': 'usuarios_usuario',
            },
        ),
    ]
