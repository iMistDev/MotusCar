# Generated by Django 4.2.21 on 2025-07-03 20:35

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('login', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Mecanico',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('region', models.CharField(choices=[('arica', 'Arica y Parinacota'), ('tarapaca', 'Tarapacá'), ('antofagasta', 'Antofagasta'), ('atacama', 'Atacama'), ('coquimbo', 'Coquimbo'), ('valparaiso', 'Valparaíso'), ('metropolitana', 'Metropolitana de Santiago'), ('ohiggins', "Libertador General Bernardo O'Higgins"), ('maule', 'Maule'), ('nuble', 'Ñuble'), ('biobio', 'Biobío'), ('araucania', 'La Araucanía'), ('rios', 'Los Ríos'), ('lagos', 'Los Lagos'), ('aysen', 'Aysén del General Carlos Ibáñez del Campo'), ('magallanes', 'Magallanes y de la Antártica Chilena')], max_length=50)),
                ('comuna', models.CharField(max_length=50)),
                ('direccion', models.CharField(max_length=200)),
                ('especialidad', models.CharField(choices=[('lubricentro', 'Lubricentro'), ('electrico', 'Eléctrico'), ('vulcanizacion', 'Vulcanización'), ('mecanica', 'Mecánica'), ('pintura', 'Pintura')], max_length=50)),
                ('tipo', models.CharField(choices=[('taller', 'Taller'), ('particular', 'Particular')], max_length=20)),
            ],
            options={
                'db_table': 'mecanico',
            },
            bases=('login.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id_producto', models.AutoField(primary_key=True, serialize=False)),
                ('Nombre_Producto', models.CharField(max_length=50)),
                ('Código_SKU', models.CharField(max_length=50, unique=True, verbose_name='Código SKU')),
                ('Proveedor', models.CharField(max_length=100)),
                ('Categoria', models.CharField(max_length=100)),
                ('Precio_Unitario', models.PositiveIntegerField(default=0)),
                ('Cantidad', models.PositiveIntegerField(default=0)),
                ('Descripcion', models.CharField(max_length=200)),
                ('Fecha_Ingreso', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('patente', models.CharField(max_length=10, unique=True)),
                ('usuario', models.CharField(max_length=100)),
                ('marca', models.CharField(max_length=50)),
                ('modelo', models.CharField(max_length=50)),
                ('año', models.IntegerField()),
                ('tipo_combustible', models.CharField(choices=[('gasolina', 'Gasolina'), ('diesel', 'Diésel'), ('electrico', 'Eléctrico'), ('hibrido', 'Híbrido')], max_length=20)),
                ('nro_chasis', models.CharField(blank=True, max_length=50, null=True)),
                ('tipo_vehiculo', models.CharField(choices=[('auto', 'Automóvil'), ('camioneta', 'Camioneta'), ('moto', 'Motocicleta'), ('bus', 'Bus'), ('camion', 'Camión')], max_length=20)),
            ],
            options={
                'db_table': 'vehiculo',
            },
            managers=[
                ('deleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UsuarioComun',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('vehiculos', models.ManyToManyField(blank=True, to='core.vehiculo')),
            ],
            options={
                'db_table': 'usuario_comun',
            },
            bases=('login.customuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('telefono', models.CharField(blank=True, max_length=20, verbose_name='teléfono')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='fecha de nacimiento')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='avatar')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='usuarios_usuario_set', related_query_name='usuario', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='usuarios_usuario_set', related_query_name='usuario', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
                'db_table': 'usuarios_usuario',
            },
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('precio', models.PositiveIntegerField(help_text='Precio en pesos (sin decimales)', validators=[django.core.validators.MaxValueValidator(9999999999)])),
                ('duracion_estimada', models.DurationField()),
                ('mecanicos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.mecanico')),
            ],
            options={
                'db_table': 'servicio',
            },
        ),
        migrations.AddField(
            model_name='mecanico',
            name='servicios',
            field=models.ManyToManyField(blank=True, to='core.servicio'),
        ),
        migrations.AddField(
            model_name='disponibilidadmecanico',
            name='mecanico',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.mecanico'),
        ),
        migrations.AddField(
            model_name='agenda',
            name='mecanico',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.mecanico'),
        ),
        migrations.AddField(
            model_name='agenda',
            name='servicio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.servicio'),
        ),
        migrations.AlterUniqueTogether(
            name='disponibilidadmecanico',
            unique_together={('mecanico', 'dia_semana')},
        ),
    ]
